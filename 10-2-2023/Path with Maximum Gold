class Solution {
    public int getMaximumGold(int[][] grid) {
        int maxs=0;
        int row=grid.length;
        int col=grid[0].length;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(grid[i][j]>0){
                    int sum=dfs(grid,i,j);
                    maxs=Math.max(sum,maxs);
                }
            }
        }
        return maxs;
    }
    public int dfs(int[][] grid,int i,int j){
        int row=grid.length;
        int col=grid[0].length;
        if(i<0 || j<0 || i>=row || j>=col || grid[i][j]==0){
            return 0;
        }
        int temp=grid[i][j];
        grid[i][j]=0;
        int up=dfs(grid,i-1,j);
        int down=dfs(grid,i+1,j);
        int left=dfs(grid,i,j-1);
        int right=dfs(grid,i,j+1);
        grid[i][j]=temp;
        return temp+Math.max(Math.max(Math.max(up,down),left),right);
    }
}
