#Longest Substring Without Repeating Characters
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        if(len(set(s))==1):
            return 1
        elif(len(s)==0):
            return 0
        else:
            p=0
            q=0
            i=0
            j=0
            l=[]
            while(i!=len(s)):
                if s[i] not in l:
                    l.append(s[i])
                    p=p+1
                    i=i+1
                else:
                    if(p>q):
                        q=p
                    l=[]
                    p=0
                    j=j+1
                    i=j
            if(p>q):
                q=p
            return q
            
            
            
 --------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 # First Unique Character in a String
 
 class Solution:
    def firstUniqChar(self, s: str) -> int:
        for i in s:
            if(s.count(i)==1):
                return s.index(i)
        return -1
        
        
 
