class Solution {
    int[] parent;
    public int[] findRedundantConnection(int[][] edges) {
        int n=edges.length;
        parent =new int[n+1];
        for(int i=0;i<n;i++){
            parent[i]=i;
        }
        for(int[] e:edges){
            if(find(e[0])==find(e[1])){
                return e;
            }
            union(e[0],e[1]);
        }
        return null;
    }
    int find(int node){
        while(parent[node]!=node){
                node=parent[node];
        }
        return node;
    }
    void union(int i,int j){
        int iroot=find(i);
        int jroot=find(j);
        if(iroot!=jroot){
            parent[jroot]=iroot;
        }
    }
}
