class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> a=new ArrayList<List<Integer>>();
        if(root==null){
            return a;
        }
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(root);
        boolean isForward=true;
        while(!queue.isEmpty()){
            List<Integer> lst=new ArrayList<>();
            int size=queue.size();
            for(int i=1;i<=size;i++){
                TreeNode curr=queue.poll();
                lst.add(curr.val);
                if(curr.left!=null){
                    queue.add(curr.left);
                }
                if(curr.right!=null){
                    queue.add(curr.right);
                }
            }
            if(isForward){
                a.add(lst);
                isForward=false;
            }
            else{
                Collections.reverse(lst);
                a.add(lst);
                isForward=true;
            }
        } 
        return a;
    }
}
